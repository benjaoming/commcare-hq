name: commcare-hq tests
on:
  pull_request:
    branches:
    - master
    - hotfix-deploy
  schedule:
    # see corehq/apps/hqadmin/management/commands/static_analysis.py
    - cron: '47 12 * * *'
jobs:
  tests:
    runs-on: ubuntu-18.04
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
        - {TEST: python, NOSE_DIVIDED_WE_RUN: '05'}
        - {TEST: python, NOSE_DIVIDED_WE_RUN: '6a'}
        - {TEST: python, NOSE_DIVIDED_WE_RUN: 'bf'}
        - {TEST: python-sharded-and-javascript}
    env:
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
      DATADOG_APP_KEY: ${{ secrets.DATADOG_APP_KEY }}
      REUSE_DB: true  # do not drop databases on completion to save time
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - uses: actions/setup-node@v2
      with:
        node-version: '12.18.1'
    - name: Install apt dependencies
      run: |
        sudo apt install -y --no-install-recommends \
          default-jdk \
          wget \
          libxml2-dev \
          libxmlsec1-dev \
          libxmlsec1-openssl

        # Install latest chrome dev package and fonts to support major
        # charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)
        # Note: this installs the necessary libs to make the bundled version
        # of Chromium that Puppeteer installs, work.
        wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
        sudo apt update
        sudo apt install -y --no-install-recommends \
          google-chrome-unstable \
          fonts-ipafont-gothic \
          fonts-wqy-zenhei \
          fonts-thai-tlwg \
          fonts-kacst \
          fonts-freefont-ttf
    - name: Docker info
      run: |
        docker version
        docker-compose version
    - name: Docker login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Run tests
      env:
        TEST: ${{ matrix.TEST }}
        NOSE_DIVIDED_WE_RUN: ${{ matrix.NOSE_DIVIDED_WE_RUN }}
        JS_SETUP: yes
      run: scripts/docker test --noinput --stop -v --divided-we-run=${{ matrix.NOSE_DIVIDED_WE_RUN }} --divide-depth=1 --with-timing --with-flaky --threshold=10 --max-test-time=29
    - name: "Codecov upload"
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: coverage.xml
        fail_ci_if_error: true
    - name: Stop containers
      if: always()
      run: scripts/docker down
